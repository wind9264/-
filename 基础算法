一、动态规划

1.背包问题
    DP[i][j]  表示只看前i件物品，总体积为j的情况下，总价值多少;w[i]  第i件物品价值；v[i]  第i件物品体积
    result=max{DP[n][0~capacity]}
    不同情况：
        1>>：不选第i件物品，DP[i][j]=f[i-1][j];
        2>>：选第i件物品，DP[i][j]=f[i-1][j-v[i]]+w[i];
        DP[i][j]=max{方案1，方案2}
    优化：
        内存优化：看状态方程关联项，若都只跟前一个相关则可以压缩空间，从尾到首遍历可防止更改前项
        
    （1）01背包
    
    （2）完全背包
    （3）多重背包
    （4）混合背包
    （5）二维费用背包
    （6）分组背包
    （7）背包问题求方案数
    （8）求背包问题得方案
    （9）有依赖的背包问题
