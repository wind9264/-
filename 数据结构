1.二叉树
      前序遍历：根节点->左子节点->右子节点
      中序遍历：左子节点->根节点->右子节点  相当于对有序二叉树排序
      后序遍历：左子节点->右子节点->根节点
      层序遍历：一层层遍历
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
2.位、与、或、非运算
      与&：同1异0；     或|：有1则1；      异或^：同0异1；   移位操作<<(>>)：
      一个整数减1之后和原来的整数位运算，得到的结果相当于把整数二进制中最右边1变成0
      或与与运算短路求值：或运算前面为true则后面跳过，与运算前面为false后面跳过
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
3.栈，堆，链表
      递归的本质就是栈结构
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
4.递归
      递归与树，栈，二叉树关联性很大
      递归三要素：（1）是否合适递归；（2）递归边界；（3）递归形式
      return Recursive（）形式：逐级上传边界值。
      value=Recursive（）形式：每次调用下层递归的答案做规则相同的判断。
      递归与 与或组合。
      
